#### 雪花算法工具配置
# 雪花算法工具类 起始时间戳
SnowFlakeIdUtil.startDate=2021-01-01 00:00:00
# 雪花算法工具类 工作ID
SnowFlakeIdUtil.workIdDef=1
# 雪花算法工具类 数据ID
SnowFlakeIdUtil.dataCenterIdDef=1

#### mybatis 配置
# mybatis 自动驼峰
mybatis.configuration.map-underscore-to-camel-case=true
# 自定义的实体类扫描路径
mybatis.type-aliases-package=com.micro.common.entity
mybatis.mapper-locations=classpath:mapper/*Mapper.xml

#### Spring 数据库配置
# 数据源类型
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 数据源地址
# 云数据库连接不上请检查本地mysql实例是否在云数据库白名单
# 先设置云数据库对所有公网开放，然后本地控制台登录后执行如下SQL查询实例IP，然后加到云数据白名单即可
# 查看本地mysql连接实例：
# select SUBSTRING_INDEX(host,':',1) as ip , count(*) from information_schema.processlist group by ip;
spring.datasource.url=jdbc:mysql://rm-cn-uqm36bzf000170ro.rwlb.cn-chengdu.rds.aliyuncs.com:3306/micro?characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=UTC
# 数据源 用户名
spring.datasource.username=terry_viva
# 数据源 密码
spring.datasource.password=Terry@123
# 数据源 驱动器类
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#### DruidDataSource 数据源配置
# 初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
# 连接池的最小空闲数量
spring.datasource.druid.min-idle=5
# 连接池最大连接数量
spring.datasource.druid.max-active=20
# 获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=20000
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 既作为检测的间隔时间又作为testWhileIdel执行的依据
spring.datasource.druid.time-between-eviction-runs-millis=20000
# 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
spring.datasource.druid.min-evictable-idle-time-millis=30000
# 用来检测数据库连接是否有效的sql
spring.datasource.druid.validation-query=select 1
# 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-borrow=true
# 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-return=false
# 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
# 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
spring.datasource.druid.filters=stat,wall,slf4j
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=3000
spring.datasource.druid.filter.stat.slow-sql-log-level=ERROR

#### HikariDataSource 数据源配置
## 连接池名称，默认HikariPool-1
#spring.datasource.hikari.pool-name=MicroHikariPool
## 最大连接数，小于等于0会被重置为默认值10；大于零小于1会被重置为minimum-idle的值
#spring.datasource.hikari.maximum-pool-size=10
## 连接超时时间:毫秒，小于250毫秒，否则被重置为默认值30秒
#spring.datasource.hikari.connection-timeout=10000
## 最小空闲连接，默认值10，小于0或大于maximum-pool-size，都会重置为maximum-pool-size
#spring.datasource.hikari.minimum-idle=5
## 空闲连接超时时间，默认值600000（10分钟），大于等于max-lifetime且max-lifetime>0，会被重置为0；不等于0且小于10秒，会被重置为10秒。
## 只有空闲连接数大于最大连接数且空闲时间超过该值，才会被释放
#spring.datasource.hikari.idle-timeout=20000
## 连接最大存活时间.不等于0且小于30秒，会被重置为默认值30分钟.设置应该比mysql设置的超时时间短
#spring.datasource.hikari.max-lifetime=300000
## 连接测试查询
#spring.datasource.hikari.connection-test-query=SELECT 1
## 自动提交
#spring.datasource.hikari.autoCommit=true
